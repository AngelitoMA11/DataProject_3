def loop_recomendacion_y_feedback(model, contexto_user, max_intentos=3):
    destinos_rechazados = []
    intentos = 0  # Contador para los intentos

    while True:
        if destinos_rechazados:
            contexto_user["destinos_rechazados"] = destinos_rechazados

        # Obtener nuevas recomendaciones
        resultados = obtener_recomendaciones_destino(contexto_user)

        # ‚ö†Ô∏è Validaci√≥n de campos esperados
        if not resultados or "destinos_recomendados" not in resultados or "iata_origen" not in resultados:
            print("‚ùå Error: respuesta incompleta del agente de recomendaci√≥n.")
            break

        recomendaciones = resultados["destinos_recomendados"]
        iata_origen = resultados["iata_origen"]

        if not recomendaciones:
            print("‚ùå No se pudieron generar recomendaciones.")
            break

        print("\nüåç DESTINOS RECOMENDADOS:\n")
        for idx, destino in enumerate(recomendaciones, start=1):
            print(f"[{idx}] {destino['nombre']} ({destino['pa√≠s']})")
            print(f"    ‚û§ Motivo: {destino['raz√≥n']}")
            print(f"    üí∞ Estimaci√≥n coste total: {destino['estimacion_coste_total']}‚Ç¨")
            print(f"    ‚úàÔ∏è Ciudad base: {destino['ciudad_base']} ({destino['iata']})\n")

        eleccion = input("üß≠ ¬øCu√°l destino eliges? Escribe el n√∫mero o 'ninguno' si no te convence ninguno:\nüëâ ").strip().lower()

        if eleccion == "ninguno":
            print("üîÅ Mostrando nuevas recomendaciones...")
            destinos_rechazados.extend([d["nombre"] for d in recomendaciones])
            intentos += 1
            if intentos >= max_intentos:
                print("‚ùå Has alcanzado el m√°ximo de intentos.")
                break
            continue

        try:
            idx = int(eleccion) - 1
            destino_elegido = recomendaciones[idx]
            contexto_user.update({
                "destino_elegido": destino_elegido,
                "iata_origen": iata_origen  # ‚úÖ Ahora s√≠ quedar√° en el JSON final
            })

            break
        except (ValueError, IndexError):
            print("‚ùå Entrada no v√°lida. Por favor, elige un n√∫mero correcto o 'ninguno'.")
            continue

    return contexto_user